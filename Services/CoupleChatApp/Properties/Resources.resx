<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Error_AddAndLinkUserFailed" xml:space="preserve">
    <value>Error occured while saving and linking user {0} on DB.</value>
  </data>
  <data name="Error_CannotCoupleUser" xml:space="preserve">
    <value>Cannot couple user with the given code. Please try again.</value>
  </data>
  <data name="Error_ChargeFailed" xml:space="preserve">
    <value>Error occured when charge from user {0}.</value>
  </data>
  <data name="Error_CodeAlreadyLinked" xml:space="preserve">
    <value>Sorry, your friend is already coupled with another User.  To send message to a non coupled friend type "CC #&lt;Friend's Code&gt; &lt;Your Message&gt;"  and  send SMS to 77117.</value>
  </data>
  <data name="Error_GetUserCodeFailed" xml:space="preserve">
    <value>Get user code failed.</value>
  </data>
  <data name="Error_InvalidChatFormat" xml:space="preserve">
    <value>Invalid input. Please type "CC &lt;Your Message&gt;" and send SMS  to 77117 again.</value>
  </data>
  <data name="Error_InvalidCode" xml:space="preserve">
    <value>Error in friend's code. Please enter valid friend's code and try again.</value>
  </data>
  <data name="Error_InvalidInputMessage" xml:space="preserve">
    <value>Invalid input message. Please check your message format. To get help type "CC #HELP" and  send SMS to 77117.</value>
  </data>
  <data name="Error_InvalidSmsFormat" xml:space="preserve">
    <value>Invalid sms format. Please check your message format. To get help type "CC #HELP" and  send SMS to 77117.</value>
  </data>
  <data name="Error_NotLinkedUser" xml:space="preserve">
    <value>Error: Message cannot be sent. You are not coupled with another friend. Type "CC #ADD &lt;Friend's Code&gt;" and send SMS to 77117 to link with a friend.</value>
  </data>
  <data name="Error_RemoveLinkedUserFailed" xml:space="preserve">
    <value>Remove linked user failed.</value>
  </data>
  <data name="Error_UserAlreadyLinked" xml:space="preserve">
    <value>Sorry. You only can have one coupled friend at a time. To send message to a non coupled friend type "CC #&lt;Friend's Code&gt; &lt;Your Message&gt;" or to get help type "CC #HELP" and  send SMS to 77117.</value>
  </data>
  <data name="Error_UserSaveFailed" xml:space="preserve">
    <value>Error occured while saving user {0} on DB.</value>
  </data>
  <data name="Info_GetUserCode" xml:space="preserve">
    <value>Your code is {0}. Share your code with your friend to start chat. Type "CC #HELP" to get instructions.</value>
  </data>
  <data name="Info_Help" xml:space="preserve">
    <value>1) To couple your friend type "CC #ADD &lt;Friend's Code&gt;" 
2) To send message to a coupled friend type "CC &lt;Your Message&gt;"
3) To send message to a non coupled friend type "CC #&lt;Friend's Code&gt; &lt;Your Message&gt;"
4) To remove your coupled friend type "CC #DEL"
5) To get your unique code type "CC #CODE"
6) To get help type "CC #HELP"
And send SMS to 77117.</value>
  </data>
  <data name="Info_RegisterSuccess" xml:space="preserve">
    <value>Thank you for registering Couple Chat service. Your user code is {0}. Now ask your friend to register and request his/her code to share with you. To couple your friend type "CC #ADD &lt;Friend's Code&gt;". Type "CC #HELP" to get help.</value>
  </data>
  <data name="Info_RegisterSuccessCoupleUser" xml:space="preserve">
    <value>Your friend and you are linked now. You can start chat. Type "CC &lt;Your Message&gt;" and send SMS to 77117.</value>
  </data>
  <data name="Info_RemoveLinkedUser" xml:space="preserve">
    <value>Your coupled user has been removed successfully. To couple with a new friend type "CC #ADD &lt;Friend's Code&gt;" or to get help type "CC #HELP" and  send SMS to 77117.</value>
  </data>
  <data name="Info_UnregisterSuccess" xml:space="preserve">
    <value>You have been unsubscribed from the Couple Chat service. Thank you for using Couple Chat.</value>
  </data>
  <data name="Info_UserAlreadyRegistered" xml:space="preserve">
    <value>You have already registered. Your code is {0}. Share your code with your friend to use our service.</value>
  </data>
  <data name="Info_UserCount" xml:space="preserve">
    <value>Users:{0} Couples:{1}</value>
  </data>
  <data name="Info_UserNotRegistered" xml:space="preserve">
    <value>User is not registered to the service.</value>
  </data>
</root>